#encoding:utf-8
"当前有"
s1 = " \n接口名称 : Wireless \n当前有 18 个网络可见。 \n\nSSID 1 : ChinaNet-qmVM\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 2 : XM9B7A\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 3 : WXwgttest\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 4 : EX6100_NETGEAR_2GEXT\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 5 : for-ftp_test\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 6 : FreeWif_test\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 7 : NOWAN24G\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 8 : TP-LINK_B2_402\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 9 : Jaqueline\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 10 : 123\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 11 : zhilu\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 12 : ZBT-China_01277A\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 13 : zwtestxx\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 14 : WIFI_206887\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 15 : QWERT\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 16 : 涓浗鍙や唬\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 17 : HT_AP1\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 18 : WIFI_228888\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\n"
p s ="16 : 涓浗鍙や唬"
" \n接口名称 : Wireless \n当前有 25 个网络可见。 \n\nSSID 1 : AccessPoint\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 2 : ChinaNet-qmVM\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 3 : \n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 4 : WXwgttest\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 5 : EX6100_NETGEAR_2GEXT\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 6 : for-ftp_test\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 7 : FreeWif_test\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 8 : NOWAN24G\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 9 : WIFI_001C2B\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 10 : TP-LINK_B2_402\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 11 : WIFI_001C35\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 12 : Jaqueline\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 13 : 123\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 14 : zhilu\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 15 : WXcyxc\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 16 : Kingc\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 17 : ZBT-China_0127DD\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 18 : zwtestxx\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 19 : WIFI_206887\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 20 : QWERT\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 21 : Tp-link-123\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 22 : 1234567890-1234567890_1234567890\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 23 : 涓浗鍙や唬\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\nSSID 24 : 111\n    Network type            : 结构\n    身份验证                : WPA2 - 个人\n    加密                    : CCMP \n\nSSID 25 : zhilu\n    Network type            : 结构\n    身份验证                : 开放式\n    加密                    : 无 \n\n"
p s.encoding
 #
  # p s ="16 : 涓浗鍙や唬".encode!("GBK") #报错
p s ="16 : 涓浗鍙や唬".encode("utf-8","GBK")
# p s ="16 : 涓浗鍙や唬".encode("GBK","utf-8") #报错
p "11111111111111111111111"
# p s.unpack("u*")
# p s.unpack("h*")
# p s.unpack("H*")
# p s.unpack("A*")
# p s.unpack("xaxa*")
puts s.force_encoding("GBK")
p s.encoding
p s.force_encoding("utf-8")
p s.encode("utf-8")
p s.to_s.encode('GBK', {:invalid => :replace, :undef => :replace, :replace => '?'})
# p s.to_s.encode('UTF-8', {:invalid => :replace, :undef => :repslace, :replace => '?'})
p s.force_encoding("ASCII-8BIT").encode('UTF-8',{:undef=>:replace, :replace=>''})
