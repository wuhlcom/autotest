#encoding:utf-8
#iam api maneger api
#管理员接口
#author:wuhongliang
#date:2016-07-21
file_path = File.expand_path('../pubsocket', __FILE__)
require file_path
module IAMAPI
    module Manager
        include IAMAPI::PubSocket
        # {
        #     "result":1,
        #     "name":"admin@zhilutec.com",
        #     "nickname":"\u552f\u4e00\u77e5\u8def\u8d85\u7ea7\u7ba1\u7406\u5458",
        #     "uid":"1",
        #     "role_code":"1",
        #     "token":"34d5aeb4b075ef65f6aa156f202127e4"
        # }
        # {
        #     "err_code": 10006,
        #     "err_msg": "帐号或密码错误"
        # }
        # curl -X POST http://192.168.10.9:8092/admins/dologin -d 'name=admin@zhilutec.com&password=123123'
        def data_manager_login(usr, pw)
            data = "name=#{usr}&password=#{pw}"
        end

        # result:
        #   {
        #   "result"=>1,
        #   "name"=>"admin@zhilutec.com",
        #   "nickname"=>"\u77E5\u8DEF\u7BA1\u7406\u5458",
        #   "uid"=>"1",
        #   "role_code"=>"1", "
        #   token"=>"ef75b14c2fe47c09b2f3def7e53d1f32"
        #   }
        #返回管理员uid和token
        def manager_login(url=ADMIN_URL, usr="admin@zhilutec.com", pw="123123")
            data       = data_manager_login(usr, pw)
            rs         = post_data(url, data)
            admin_hash = JSON.parse(rs)
        end

        #curl -X POST http://192.168.10.9:8082/index.php/admins/add/uid/1/token/34d5aeb4b075ef65f6aa156f202127e4
        # -d 'account=chaoji@126.com&nickname=test_nickname&password=123123&role_code=2&comments=ttttttt&pid=1'
        def url_manager_add(token, uid=1)
            url = "http://192.168.10.9:8082/index.php/admins/add/uid/#{uid}/token/#{token}"
        end

        def data_manager_add(account, nickname, passwd, rcode="2", commnets="autotest", pid=1)
            data = "account=#{account}&nickname=#{nickname}&password=#{passwd}&role_code=#{rcode}&comments=#{commnets}&pid=#{pid}"
        end

        #rcode,2-超级管理员，3-系统管理员
        def manager_add(account, nickname, passwd, rcode="2", commnets="autotest", pid=1, uid=1)
            rs_login = manager_login
            token    = rs_login["token"]
            url      = url_manager_add(token, uid)
            data     = data_manager_add(account, nickname, passwd, rcode, commnets, pid)
            rs       = post_data(url, data)
            JSON.parse(rs)
        end

        #查询管理员信息
        #显示所有
        # curl -X GET http://192.168.10.9:8082/index.php/admins/index/uid/1/token/34d5aeb4b075ef65f6aa156f202127e4
        #分页显示
        # curl -X GET http://192.168.10.9:8082/index.php/admins/index/uid/1/p/2/token/34d5aeb4b075ef65f6aa156f202127e4
        #按用户名查找
        # curl -X GET http://192.168.10.9:8092/index.php/admins/index/uid/1/name/dengfei/token/34d5aeb4b075ef65f6aa156f202127e4
        def get_manager_list_all(token)
            url = "http://192.168.10.9:8082/index.php/admins/index/uid/1/token/#{token}"
            rs  = get(url)
            JSON.parse(rs)
        end

        def get_manager_list_byname(name, token)
            url = "http://192.168.10.9:8082/index.php/admins/index/uid/1/name/#{name}/token/#{token}"
            rs  =get(url)
            JSON.parse(rs)
        end

        #返回结果为hash,name是支持模糊匹配的
        # {"totalRows"=>"1", "listRows"=>10, "nowPage"=>1,
        # "res"=>[{"id"=>"11", "name"=>"whltest2@zhilutec.com", "nickname"=>"whltest2",
        # "comments"=>"autotest", "title"=>"\u8D85\u7EA7\u7BA1\u7406\u5458"}]}
        def get_mlist_byname(name)
            rs = manager_login
            get_manager_list_byname(name, rs["token"])
        end

        def get_mlist_all
            rs = manager_login
            get_manager_list_all(rs["token"])
        end

        #删除管理员
        # curl -X GET http://192.168.10.9:8082/index.php/admins/del/uid/1/userid/123/token/f4f2fd3697a4b9f72368081765e5be67
        def delete_manager(userid, token, uid="1")
            url = "http://192.168.10.9:8082/index.php/admins/del/uid/#{uid}/userid/#{userid}/token/#{token}"
            get(url)
        end

        #name必须用完整管理员名
        def del_manager(name, uid="1")
            rs_del   = {}
            rs_login = manager_login
            rs       = get_manager_list_byname(name, rs_login["token"])
            if rs["res"].empty?
                puts "#{name} is not exists!"
            else
                userid = rs["res"][0]["id"]
                rs_del = delete_manager(userid, rs_login["token"], uid)
                rs_del = JSON.parse(rs_del)
            end
            return rs_del
        end

        # curl -X GET "http://192.168.10.9:8082/apps?admin_id=1&token=f816eabf9964b995313948a0d6c4c085" // 查询全部
        # curl -X GET "http://192.168.10.9:8082/apps?admin_id=1&token=XXXX&listRows=2&p=2" // 分页查询
        # curl -X GET "http://192.168.10.9:8082/apps?admin_id=1&token=XXXX&type=name&cond=123" // 模糊查询
        #args
        # 1: {"listRows"=>"2","p"=>"2"}
        # 2: {"type"=>"name","cond"=>"IAM"}
        #    type。模糊查询类型，name:应用名称 id:应用编号 provider:应用提供方
        #    cond, 模糊查询条件。为空则不进行模糊查询，type,cond条件无效则查询全部
        #return,String
        #  "http://192.168.10.9:8082/apps?admin_id=1&token=f816eabf9964b995313948a0d6c4c085" // 查询全部
        #  "http://192.168.10.9:8082/apps?admin_id=1&token=XXXX&listRows=2&p=2" // 分页查询
        #  "http://192.168.10.9:8082/apps?admin_id=1&token=XXXX&type=name&cond=123" // 模糊查询
        def data_app_list(token, uid="1", args =nil)
            data    =""
            args_arr=[]
            if args.nil?
                data = "admin_id=#{uid}&token=#{token}"
            elsif args.kind_of?(Hash)
                data = "admin_id=#{uid}&token=#{token}&"
                args.each do |key, value|
                    args_arr<<"#{key}=#{value}"
                end
                data=data+args_arr.join("&")
            else
                "params error!"
            end
            return data
        end

        #return,Hash，返回应用列表信息
        # curl -X GET "http://192.168.10.9:8082/apps?admin_id=1&token=f816eabf9964b995313948a0d6c4c085" // 查询全部
        # curl -X GET "http://192.168.10.9:8082/apps?admin_id=1&token=XXXX&listRows=2&p=2" // 分页查询
        # curl -X GET "http://192.168.10.9:8082/apps?admin_id=1&token=XXXX&type=name&cond=123" // 模糊查询
        def get_app_list(token, url=APP_URL, uid="1", args =nil)
            uri = uri(url+data_app_list(token, uid, args))
            rs  = get(uri)
            JSON.parse(rs)
        end

        #return,Array，获取应用列表中应用信息
        def get_app_info(token, url=APP_URL, uid="1", args =nil)
            rs = get_app_list(token, url, uid, args)
            rs["apps"]
        end

        #return,Hash，获取应用列表中指定应用信息
        def get_spec_app_info(token, appname, url=APP_URL, uid="1", args =nil)
            app_info={}
            rs      = get_app_info(token, url, uid, args)
            rs.each do |app|
                if app.has_value?(appname)
                    app_info=app
                end
            end
            return app_info
        end

        #创建应用
        # curl -X POST "http://192.168.10.9:8082/apps?admin_id=1&token=f816eabf9964b995313948a0d6c4c085" -d '{"name":"test", "provider":"知路公司","redirect_uri":"http://www.test.com"}'
        def create_apply(admin_id, token, name, provider, redirect_uri, comments, app_url=APP_URL)
            url = "#{app_url}admin_id=#{admin_id}&token=#{token}"
            data = "{\"name\":\"#{name}\", \"provider\":\"#{provider}\",\"redirect_uri\":\"#{redirect_uri}\",\"comments\":\"#{comments}\"}"
            rs = post_data(url, data)
            JSON.parse(rs)
        end

        # 返回应用ID
        def get_client_id(apply_name, token, uid, url=APP_URL, args=nil)
            if apply_name.kind_of?(Array)
                client_id_arr = []
                apply_name.each do |apply|
                    res = get_spec_app_info(token, apply, url, uid, args)
                    client_id_arr << res["client_id"]
                end
                client_id_arr.join(",")
            else
                res = get_spec_app_info(token, apply_name, url, uid, args)
                res["client_id"]
            end
        end

        #删除指定应用
        # curl -X DELETE "http://192.168.10.9:8082/apps?id=160517254512&admin_id=1&token=125e0d6b0cf379e4d51fbf47bdd9598c"
        # curl -X DELETE "http://192.168.10.9:8091/apps?id=1111,2222,3333&admin_id=1" // 批量删除
        #appname = "autotest1"
        #appname = ["autotest1", "autotest2"]
        def del_apply(appname, token, uid, url=APP_URL, args =nil)
            client_id = get_client_id(appname, token, uid, url, args) #应用ID
            path = "#{url}id=#{client_id}&admin_id=#{uid}&token=#{token}"
            rs = http_del(path)
            JSON.parse(rs)
        end

        #查看应用详情
        # curl -X GET "http://192.168.10.9:8091/apps?id=160512231520&admin_id=1&token=34d5aeb4b075ef65f6aa156f202127e4"
        def apply_details(client_id, admin_id, token, app_url=APP_URL)
            url = "#{app_url}id=#{client_id}&admin_id=#{admin_id}&token=#{token}"
            rs = http_get(url)
            JSON.parse(rs)
        end

        #修改应用
        #curl -X PUT "http://192.168.10.9:8091/apps?admin_id=1&token=34d5aeb4b075ef65f6aa156f202127e4&id=160512231520" -d '{"name":"test_put","provider":"zhilu","redirect_uri":"http://www.zhilutec.com","comments":""}'
        def modify_apply(admin_id, token, client_id, name, provider, re_uri, comments, app_url=APP_URL)
            url = "#{app_url}admin_id=#{admin_id}&token=#{token}&id=#{client_id}"
            data = "{\"name\":\"#{name}\",\"provider\":\"#{provider}\",\"redirect_uri\":\"#{re_uri}\",\"comments\":\"#{comments}\"}"
            rs = http_put(url, data)
            JSON.parse(rs)
        end

    end
end