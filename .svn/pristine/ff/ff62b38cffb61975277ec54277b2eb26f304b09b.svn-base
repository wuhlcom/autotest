#encoding:utf-8
gem 'minitest'
require 'minitest/autorun'

file_path =File.expand_path('../../lib/iam', __FILE__)
require file_path
class MyTestString < MiniTest::Unit::TestCase
    # include IAMAPI::Manager
    # include IAMAPI::Oauth
    # Called before every ftp_test method runs. Can be used
    # to set up fixture information.
    def setup
        # Do nothing
    end

    # Called after every ftp_test method runs. Can be used to tear
    # down fixture information.

    def teardown
        # Do nothing
    end

    def test_admin
        @iam    = IAMAPI::IAM.new
        admin_url = "http://192.168.10.9:8082/admins/dologin"
        p rs = @iam.admin_login(admin_url) #管理员登录->得到uid和token
        assert_equal("admin@zhilutec.com", rs["name"], "manager name error!")
    end


    def test_app
        admin_url = "http://192.168.10.9:8082/admins/dologin"
        rs        = admin_login(admin_url) #管理员登录->得到uid和token
        # {"result"=>1, "name"=>"admin@zhilutec.com", "nickname"=>"\u77E5\u8DEF\u7BA1\u7406\u5458", "uid"=>"1", "role_code"=>"1", "token"=>"c7dd9954c18fdbcb65e9fb35638e9025"}
        app_url   = "http://192.168.10.9:8082/apps?"
        rs["nickname"].encode("GBK")
        appname = "IAMAPI_IAM_F_OAuth_019"
        args    = {"type" => "name", "cond" => "IAMAPI_IAM_F_OAuth_019"}
        p rs_app = get_spec_app_info(rs["token"], appname, app_url, rs["uid"]) #获取指定应用ID和密钥->输入uid和token，得到secret和client_id
    end

    def test_userid
        admin_url = "http://192.168.10.9:8082/admins/dologin"
        rs        = admin_login(admin_url) #管理员登录->得到uid和token
        # {"result"=>1, "name"=>"admin@zhilutec.com", "nickname"=>"\u77E5\u8DEF\u7BA1\u7406\u5458", "uid"=>"1", "role_code"=>"1", "token"=>"c7dd9954c18fdbcb65e9fb35638e9025"}
        app_url   = "http://192.168.10.9:8082/apps?"
        rs["nickname"].encode("GBK")
        appname = "IAMAPI_IAM_F_OAuth_019"
        args    = {"type" => "name", "cond" => "IAMAPI_IAM_F_OAuth_019"}
        rs_app  = get_spec_app_info(rs["token"], appname, app_url, rs["uid"]) #获取指定应用ID和密钥->输入uid和token，得到secret和client_id

        oauth_url   = "http://192.168.10.9:8082/index.php/Oauth/authorize"
        username    = "13760281579" #注册用户名
        encrypt_pwd = "9c76736d8a993299e155c797861d14ef7cd3507c900527e11da5d3357872ba9fb9e2db9511fe2bfafe7a6d4c6f8efdac40425414639e4815069c380c86ef4a7dd121e7db0418919a3ca8de77d745269ad19ea117154411df35f840eb1af5e82383c2d6dc627b3654f15596959e1643707995e9ef3db2847c0ca60de50ac43fc0" #用户密码
        client_id   = rs_app["client_id"]
        secret      = rs_app["client_secret"]
        # print user_login(oauth_url, username, encrypt_pwd, secret, clientid) #用户oauth登录
        p user_oauth(username, encrypt_pwd, secret, client_id, oauth_url) ##用户oauth登录,输入secret和client_id得到用户的userid
        check_url = "http://192.168.10.9:8082/userid.txt"
        # get_userid(check_url) #获取userid
    end


    def test_oauth_userid
        p oauth_get_userid
    end

    def test_code_error
        p oauth_get_code("cod")
    end

    def test_code
         oauth_get_code("code")
    end

    def test_get_usr_all
        print get_usr_list_all
    end

    def test_get_usr_list_byname
        print get_usr_list_byname("whltest2@zhilutec.com")
    end

    # Fake ftp_test
    # def test_fail
    #
    #   fail('Not implemented')
    # end

end